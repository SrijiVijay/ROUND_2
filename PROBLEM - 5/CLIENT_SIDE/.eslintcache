[{"C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\index.js":"1","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\reportWebVitals.js":"2","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\App.js":"3","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Layout\\CommonLayout.jsx":"4","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\index.jsx":"5","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\Content.jsx":"6","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\Footer.jsx":"7","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\Header.jsx":"8","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\HomeBot\\HomeBot.jsx":"9","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Error\\Error.jsx":"10","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Summary\\SummaryPage.jsx":"11","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Login\\Login.jsx":"12","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Register\\Register.jsx":"13","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Home\\Home.jsx":"14","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Payment\\PaymentPage.jsx":"15","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Button\\CustomButton.jsx":"16","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Loader\\Loader.jsx":"17","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Input\\CustomInput.jsx":"18","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Select\\CustomSelect.jsx":"19"},{"size":589,"mtime":1609766360476,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":223,"mtime":1609772720768,"results":"23","hashOfConfig":"21"},{"size":2167,"mtime":1610008679027,"results":"24","hashOfConfig":"21"},{"size":149,"mtime":1608636934936,"results":"25","hashOfConfig":"21"},{"size":1787,"mtime":1610006795996,"results":"26","hashOfConfig":"21"},{"size":2344,"mtime":1609816115324,"results":"27","hashOfConfig":"21"},{"size":3511,"mtime":1609906398533,"results":"28","hashOfConfig":"21"},{"size":3770,"mtime":1610008183130,"results":"29","hashOfConfig":"21"},{"size":416,"mtime":1609815000252,"results":"30","hashOfConfig":"21"},{"size":11372,"mtime":1610948498164,"results":"31","hashOfConfig":"21"},{"size":8332,"mtime":1610948603908,"results":"32","hashOfConfig":"21"},{"size":8348,"mtime":1610948609373,"results":"33","hashOfConfig":"21"},{"size":24092,"mtime":1610948598147,"results":"34","hashOfConfig":"21"},{"size":20874,"mtime":1610948471436,"results":"35","hashOfConfig":"21"},{"size":1161,"mtime":1609816933243,"results":"36","hashOfConfig":"21"},{"size":357,"mtime":1609815600215,"results":"37","hashOfConfig":"21"},{"size":2962,"mtime":1610009547546,"results":"38","hashOfConfig":"21"},{"size":3673,"mtime":1609855372359,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1eqmu5j",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\index.js",[],["94","95"],"C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\reportWebVitals.js",[],"C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\App.js",["96"],"import logo from './logo.svg';\nimport './App.css';\nimport CommonLayout from './Layout/CommonLayout.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CommonLayout />\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Layout\\CommonLayout.jsx",["97"],"import React, { useState } from \"react\";\r\nimport { Content, Footer, Header } from \"../CommonComponent/LayoutComponent/index.jsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: \"100vh\",\r\n        position: \"relative\",\r\n        // backgroundImage:\r\n        //    url(${amBackgroundImage})` : \"\",\r\n        backgroundPosition: \"100%\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    },\r\n    commonCoinatinerRoot: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"nowrap\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        height: \"100%\",\r\n        padding: \"0 15px\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"97vw\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"95vw\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"100vw\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"1110px\",\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            width: \"1110px\",\r\n        },\r\n    },\r\n}));\r\nexport default function CommonLayout(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {window.location.pathname.search('login') > -1 || window.location.pathname.search('register') > -1\r\n                || window.location.pathname.search('homebot') > -1 ?\r\n                null\r\n                :\r\n                <Header\r\n                    className={classes.commonCoinatinerRoot}\r\n                    {...props}\r\n                />\r\n            }\r\n\r\n            <Content\r\n                className={classes.commonCoinatinerRoot}\r\n                {...props}\r\n            />\r\n            {window.location.pathname.search('login') > -1 || window.location.pathname.search('register') > -1\r\n                || window.location.pathname.search('homebot') > -1 ?\r\n                null\r\n                :\r\n                <Footer\r\n                    className={classes.commonCoinatinerRoot}\r\n                />\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\index.jsx",[],"C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\Content.jsx",["98"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect, Route, Router, Switch } from \"react-router-dom\";\r\nimport Home from '../../Component/Home/Home.jsx';\r\nimport Error from \"../../Component/Error/Error.jsx\";\r\nimport PaymentPage from \"../../Component/Payment/PaymentPage.jsx\";\r\nimport SummaryPage from \"../../Component/Summary/SummaryPage.jsx\";\r\nimport Login from \"../../Component/Login/Login.jsx\";\r\nimport Register from \"../../Component/Register/Register.jsx\";\r\nimport HomeBot from \"../../Component/HomeBot/HomeBot.jsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"calc(100vh - 34.5vh)\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      // minHeight: \"calc(100vh - 18.5vh)\",\r\n      minHeight: \"calc(100vh - 195px)\",\r\n    },\r\n    // background: \"#f3f9fb\",\r\n    padding: \"40px 0\",\r\n  },\r\n  contentRoot: {\r\n    display: \"flex !important\",\r\n    alignItems: \"flex-start !important\",\r\n    flexWrap: \"nowrap !important\",\r\n  },\r\n}));\r\nexport default function Content(props) {\r\n  const classes = useStyles();\r\n  const { className } = props;\r\n  return (\r\n\r\n    <div className={`${classes.root}`}>\r\n      <div className={`${className} ${classes.contentRoot}`}>\r\n\r\n        <Switch>\r\n          <Route exact path={\"/start\"} component={Home} />\r\n          <Route exact path={\"/payment\"} component={PaymentPage} />\r\n          <Route exact path={\"/summary\"} component={SummaryPage} />\r\n\r\n          <Route exact path={\"/homebot\"} component={HomeBot} />\r\n          <Route exact path={\"/login\"} component={Login} />\r\n          <Route exact path={\"/register\"} component={Register} />\r\n          <Route exact path=\"/error\" component={Error} />\r\n          <Redirect to=\"/start\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\Footer.jsx",["99","100","101"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"24vh\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      // height: \"8vh\",\r\n      height: \"80px\",\r\n    },\r\n    background: \"#f3f9fb\",\r\n    border: \"1px solid hsla(0,0%,56%,.2)\",\r\n  },\r\n  cointainer: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n      textAlign: \"center\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      textAlign: \"center\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flexDirection: \"row\",\r\n      padding: \"0 15px 0 15px!important\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      flexDirection: \"row\",\r\n      padding: \"0 15px 0 15px!important\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    justifyContent: \"space-around\",\r\n    padding: \"0 15px !important\",\r\n    color: \"#909090\",\r\n    fontSize: \"14px\",\r\n    fontWeight: 500,\r\n  },\r\n  link: {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"8px\",\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n  },\r\n  rootText: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"80%\",\r\n    },\r\n  }\r\n}));\r\nexport default function Footer(props) {\r\n  const classes = useStyles();\r\n  const { className } = props;\r\n  const [currentYear, setCurrentyear] = useState('')\r\n\r\n  useEffect(() => {\r\n    const tz = new Date().getFullYear();\r\n    setCurrentyear(tz)\r\n  })\r\n\r\n  return (\r\n    <div className={`${classes.root}`}>\r\n      <div className={`${className} ${classes.cointainer}`}>\r\n        <React.Fragment>\r\n          <div className={classes.rootText}>{`Copyright © ${currentYear} Health Insurance All Rights Reserved.`}</div>\r\n          <div className=\"display-flex align-items-center\">\r\n            <a\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              className={classes.link}\r\n\r\n            >\r\n              Terms & Conditions\r\n            </a>\r\n            <a\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              className={classes.link}\r\n\r\n            >\r\n              Privacy Policy\r\n            </a>\r\n          </div>\r\n        </React.Fragment>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\LayoutComponent\\Header.jsx",["102","103","104"],"import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport logo from '../../logo.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"10.5vh\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"75px\",\r\n    },\r\n    background:\r\n      \"linear-gradient(90deg,#fff,#f2faff 50%,#e8fbff)\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      background: \"#f3f9fb !important\",\r\n    },\r\n  },\r\n  cointainer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none !important\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none !important\",\r\n    },\r\n    justifyContent: \"space-between\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n  image: {\r\n    cursor: \"pointer\",\r\n    \"& g\": {\r\n      fill: theme.palette.primary.main,\r\n    },\r\n    \"& path\": {\r\n      fill: theme.palette.primary.main,\r\n    },\r\n  },\r\n  iconCointainer: {\r\n    [theme.breakpoints.down(\"xl\")]: {\r\n      display: \"none !important\",\r\n    },\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      display: \"none !important\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none !important\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex !important\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex !important\",\r\n    },\r\n    cursor: \"pointer\",\r\n    justifyContent: \"flex-start\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n  pageHeading: {\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  progressBar: {\r\n    height: \"3px\",\r\n    margin: \"0 15px\",\r\n  },\r\n  companyName: {\r\n    fontSize: \"24px\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\nexport default function Header(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const { className } = props;\r\n\r\n  return (\r\n    <div className={`${classes.root}`}>\r\n      <div className={`${className} ${classes.iconCointainer}`}>\r\n        {/* <BsFilterLeft size=\"3em\" className=\"pointer-icon bs-filter-ham-icon\" />\r\n\r\n\r\n        <BsX size=\"2em\" /> */}\r\n      </div>\r\n      {/* {window.location.pathname.search(\"thankyou\") <= 0 &&\r\n        window.location.pathname.search(\"start\") <= 0\r\n        && (\r\n          <div className={classes.iconCointainer}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                color=\"primary\"\r\n                value={window.location.pathname.search(\"plan\") > -1 ? 20\r\n                  : window.location.pathname.search(\"custom\") > -1 ? 40\r\n                    : window.location.pathname.search(\"profile\") > -1 ? 60\r\n                      : window.location.pathname.search(\"summary\") > -1 ? 80 : 0}\r\n                classes={{ root: classes.progressBar }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )} */}\r\n\r\n      <div className={`${className} ${classes.cointainer}`}>\r\n        <a href=\"/start\" rel=\"noopener noreferrer\">\r\n          <img src={logo} alt=\"kurnia-logo\" width={100} />\r\n        </a>\r\n\r\n        <div style={{ textAlign: \"center\", marginTop: \"2%\" }}></div>\r\n        {/* <HeaderStepper /> */}\r\n        <div className={`display-flex align-items-flex-end`}>\r\n\r\n          <NeedAssistance />\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nconst NeedAssistance = (props) => {\r\n  const classes = useStyles();\r\n  const { handleNeedAssitanceOpen } = props;\r\n  return (\r\n    <div\r\n      className={`${classes.image} ${classes.companyName} display-flex align-items-flex-end`}\r\n    >\r\n      Health Insurance\r\n    </div>\r\n  );\r\n};\r\n\r\n","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\HomeBot\\HomeBot.jsx",["105","106"],"import { Button, Grid, Paper, Typography, withStyles } from '@material-ui/core';\r\nimport react, { Fragment } from 'react';\r\nimport CustomButton from '../../CommonComponent/Button/CustomButton';\r\n\r\n\r\nconst homeBotStyle = theme => ({\r\n    root: {\r\n        width: \"60%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    rootPaper: {\r\n        padding: \"10px 40px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        margin: \"40px auto\",\r\n    },\r\n    summary: {\r\n        textAlign: \"left\",\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n        borderBottom: \"2px solid #3f51b5\",\r\n        paddingBottom: \"23px\",\r\n    },\r\n    heading: {\r\n        padding: \"10px\",\r\n        fontSize: \"24px\",\r\n        fontWeight: \"600\",\r\n        color: \"#3f51b5\",\r\n    },\r\n    selectPaper: {\r\n        border: \"1px solid #909090\",\r\n        marginTop: \"8px\",\r\n        boxShadow: \"none\",\r\n        maxHeight: \"205px !important\",\r\n    },\r\n    selectList: {\r\n        \"& li\": {\r\n            padding: \"10px\",\r\n            fontSize: \"17px\",\r\n        },\r\n        // \"&$selected \": {\r\n        //     background: \"#3f51b5\",\r\n        // },\r\n        // \"& hover\": {\r\n        //   background: theme.palette.primary.light,\r\n        // },\r\n    },\r\n    menuItemRoot: {\r\n        \"&$selected\": {\r\n            background: `#3f51b5b3 !important`,\r\n        },\r\n        \"&$selected:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n        \"&:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n    },\r\n    menuSelected: { background: \"#3f51b5b3 !important\" },\r\n    footerBtnContainer: {\r\n        padding: \"50px\",\r\n    },\r\n    itemName: {\r\n        fontWeight: 500,\r\n    },\r\n    itemValue: {\r\n        fontWeight: 700,\r\n    },\r\n})\r\n\r\nclass HomeBot extends react.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n                <Paper classes={{ root: classes.rootPaper }} elevation={10}>\r\n                    <Typography variant=\"h5\" gutterBottom classes={{ root: classes.heading }}>\r\n                        Home - Bot\r\n                    </Typography>\r\n\r\n                    <Fragment>\r\n                        <div className={classes.summary}>\r\n                            {/* <h4 style={{ margin: 0, marginBottom: \"10px\", color: \"#3f51b5\", paddingTop: \"12px\" }}>Login</h4> */}\r\n\r\n                        </div>\r\n                        <div className={classes.container}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={2}></Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {\r\n                                        this.props.history.push('/login')\r\n                                    }}>\r\n                                        Login\r\n                                    </Button>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => {\r\n                                        this.props.history.push('/register')\r\n                                    }}>\r\n                                        Register\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={2}></Grid>\r\n                            </Grid>\r\n\r\n                        </div>\r\n                    </Fragment>\r\n\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(homeBotStyle)(HomeBot)","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Error\\Error.jsx",[],"C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Summary\\SummaryPage.jsx",["107","108"],"import { Grid, MenuItem, Paper, Typography, withStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport react, { Fragment } from 'react';\r\nimport CustomButton from '../../CommonComponent/Button/CustomButton';\r\nimport Loader from '../../CommonComponent/Loader/Loader';\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst paymentSecretKey = 'run4Fun';\r\n\r\n\r\nconst summaryStyle = theme => ({\r\n    root: {\r\n        width: \"85%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    rootPaper: {\r\n        padding: \"10px 40px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        margin: \"5px auto\",\r\n    },\r\n    summary: {\r\n        textAlign: \"left\",\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n        borderBottom: \"2px solid #3f51b5\",\r\n        paddingBottom: \"23px\",\r\n    },\r\n    heading: {\r\n        padding: \"5px\",\r\n        fontSize: \"24px\",\r\n        fontWeight: \"500\",\r\n        color: \"#3f51b5\",\r\n    },\r\n    selectPaper: {\r\n        border: \"1px solid #909090\",\r\n        marginTop: \"8px\",\r\n        boxShadow: \"none\",\r\n        maxHeight: \"205px !important\",\r\n    },\r\n    selectList: {\r\n        \"& li\": {\r\n            padding: \"10px\",\r\n            fontSize: \"17px\",\r\n        },\r\n        // \"&$selected \": {\r\n        //     background: \"#3f51b5\",\r\n        // },\r\n        // \"& hover\": {\r\n        //   background: theme.palette.primary.light,\r\n        // },\r\n    },\r\n    menuItemRoot: {\r\n        \"&$selected\": {\r\n            background: `#3f51b5b3 !important`,\r\n        },\r\n        \"&$selected:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n        \"&:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n    },\r\n    menuSelected: { background: \"#3f51b5b3 !important\" },\r\n    footerBtnContainer: {\r\n        margin: \"30px\",\r\n    },\r\n    itemName: {\r\n        fontWeight: 500,\r\n    },\r\n    itemValue: {\r\n        fontWeight: 700,\r\n\r\n    },\r\n    item: {\r\n        padding: \"4px\",\r\n        fontSize: \"18px\",\r\n    }\r\n})\r\n\r\nclass SummaryPage extends react.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        if (sessionStorage.getItem(\"data\") === null || sessionStorage.getItem(\"data\") === \"\") {\r\n            props.history.push(`start`);\r\n        }\r\n        if (sessionStorage.getItem(\"dataPrm\") === null || sessionStorage.getItem(\"dataPrm\") === \"\") {\r\n            props.history.push(`start`);\r\n        }\r\n        this.state = {\r\n            loader: true,\r\n            formData: {},\r\n            premiumResponseData: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"data\") !== null && sessionStorage.getItem(\"dataPrm\") !== \"\") {\r\n            let data = sessionStorage.getItem(\"data\");\r\n            let bytes = CryptoJS.AES.decrypt(data, paymentSecretKey);\r\n            let decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n            let premiumResponseData = sessionStorage.getItem(\"dataPrm\");\r\n            let resBytes = CryptoJS.AES.decrypt(premiumResponseData, paymentSecretKey);\r\n            let resDecryptedData = JSON.parse(resBytes.toString(CryptoJS.enc.Utf8));\r\n\r\n\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loader: false,\r\n                formData: decryptedData,\r\n                premiumResponseData: resDecryptedData.data,\r\n            }))\r\n        }\r\n    }\r\n\r\n    handleProceed = () => {\r\n\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            loader: true,\r\n        }))\r\n\r\n        let path = `payment`;\r\n        this.props.history.push(path);\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state, this.state.formData)\r\n        const { classes } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n\r\n                <Loader loader={this.state.loader} />\r\n                <Paper classes={{ root: classes.rootPaper }} elevation={10}>\r\n                    <Typography variant=\"h5\" gutterBottom classes={{ root: classes.heading }}>\r\n                        Review Your Details\r\n                    </Typography>\r\n\r\n                    {Object.keys(this.state.formData).length > 0 ?\r\n                        <Fragment>\r\n                            <div className={classes.summary}>\r\n                                <h4 style={{ margin: 0, marginBottom: \"10px\", color: \"#3f51b5\", paddingTop: \"12px\", fontSize: \"19px\" }}>Personal & Premium Details</h4>\r\n                                <Grid container>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Insured Person : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.name}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>E-mail : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.email}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Age : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.age}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Gender : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.gender}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Hypertension : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.hyperTension}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Blood Sugar : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.bloodSugar}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Overweight : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.overWeight}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Blood Pressure : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.bloodPressure}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Smoking : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.smoking}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Alcohol : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.alcohol}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Drugs : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.drugs}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Daily Exercise : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemValue}>{this.state.formData.dailyExercise}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                        <span className={classes.itemName}>Premium Amount : </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} className={classes.item}>\r\n                                    {console.log(this.state.premiumResponseData)}\r\n                                        <span className={classes.itemValue}>Rs. {this.state.premiumResponseData.amount} </span>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </div>\r\n\r\n                            <div className={classes.container}>\r\n                                <div className={classes.footerBtnContainer}>\r\n                                    <CustomButton disabled={this.state.paymentButton} onClick={this.handleProceed}>\r\n                                        Proceed to payment\r\n                                </CustomButton>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                        : null\r\n                    }\r\n\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(summaryStyle)(SummaryPage)","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Login\\Login.jsx",["109","110","111","112"],"import { Grid, MenuItem, Paper, TextareaAutosize, Typography, withStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport react, { Fragment } from 'react';\r\nimport CustomButton from '../../CommonComponent/Button/CustomButton';\r\nimport CustomInput from '../../CommonComponent/Input/CustomInput';\r\nimport Loader from '../../CommonComponent/Loader/Loader';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CustomSelect from '../../CommonComponent/Select/CustomSelect';\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst paymentSecretKey = 'run4Fun';\r\nconst numRegx = new RegExp(\"^[0-9]+$\");\r\n\r\nconst loginStyle = theme => ({\r\n    root: {\r\n        width: \"60%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    rootPaper: {\r\n        padding: \"10px 40px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        margin: \"20px auto\",\r\n    },\r\n    summary: {\r\n        textAlign: \"left\",\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n        borderBottom: \"2px solid #3f51b5\",\r\n        paddingBottom: \"23px\",\r\n    },\r\n    heading: {\r\n        padding: \"10px\",\r\n        fontSize: \"24px\",\r\n        fontWeight: \"600\",\r\n        color: \"#3f51b5\",\r\n    },\r\n    selectPaper: {\r\n        border: \"1px solid #909090\",\r\n        marginTop: \"8px\",\r\n        boxShadow: \"none\",\r\n        maxHeight: \"205px !important\",\r\n    },\r\n    selectList: {\r\n        \"& li\": {\r\n            padding: \"10px\",\r\n            fontSize: \"17px\",\r\n        },\r\n        // \"&$selected \": {\r\n        //     background: \"#3f51b5\",\r\n        // },\r\n        // \"& hover\": {\r\n        //   background: theme.palette.primary.light,\r\n        // },\r\n    },\r\n    menuItemRoot: {\r\n        \"&$selected\": {\r\n            background: `#3f51b5b3 !important`,\r\n        },\r\n        \"&$selected:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n        \"&:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n    },\r\n    menuSelected: { background: \"#3f51b5b3 !important\" },\r\n    footerBtnContainer: {\r\n        margin: \"30px\",\r\n    },\r\n    itemName: {\r\n        fontWeight: 500,\r\n    },\r\n    itemValue: {\r\n        fontWeight: 700,\r\n    },\r\n})\r\n\r\nclass LoginPage extends react.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formData: {\r\n                username: \"\",\r\n                password: \"\",\r\n            },\r\n            loader: false,\r\n            loginButton: true\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleOnChange = (event) => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        // if (name === \"cardNumber\" || name == \"cvv\" || name == \"expiryMonth\" || name == \"expiryYear\") {\r\n        //     if (!(!value.length || numRegx.test(value))) {\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        let values = this.state;\r\n        values.formData[name] = value;\r\n        this.setState({ ...values }, () => {\r\n            this.validatePay()\r\n        });\r\n    }\r\n\r\n    validatePay = () => {\r\n\r\n        let values = this.state.formData;\r\n        if (values.username !== \"\" && values.password !== \"\") {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loginButton: false\r\n            }))\r\n        } else {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loginButton: true\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    handleProceed = () => {\r\n\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            loader: true\r\n        }))\r\n\r\n        console.log(this.state)\r\n\r\n        let obj = {\r\n            \"userDetails\": {\r\n                \"username\": this.state.formData.username,\r\n                \"password\": this.state.formData.password,\r\n            },\r\n        }\r\n\r\n        let EncryptedObj = CryptoJS.AES.encrypt(JSON.stringify(obj), paymentSecretKey).toString();\r\n        console.log(EncryptedObj);\r\n\r\n        // var bytes = CryptoJS.AES.decrypt(EncryptedObj, paymentSecretKey);\r\n        // var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n        // console.log(decryptedData)\r\n\r\n        axios.post('http://localhost:8085/premiumservice/calculatePremium', EncryptedObj).then(res => {\r\n            console.log(res)\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loader: false,\r\n                paymentResponse: res,\r\n            }))\r\n        })\r\n            .catch(() => {\r\n                let path = `error`;\r\n                this.props.history.push(path)\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n                <Loader loader={this.state.loader} />\r\n                <Paper classes={{ root: classes.rootPaper }} elevation={10}>\r\n                    <Typography variant=\"h5\" gutterBottom classes={{ root: classes.heading }}>\r\n                        <HomeIcon onClick={() => {\r\n                            this.props.history.push('/homebot')\r\n                        }} style={{ cursor: \"pointer\", float: \"left\", width: \"1.3em\", height: '1.3em' }} />\r\n                        <span>Login</span>\r\n                    </Typography>\r\n\r\n                    <Fragment>\r\n                        <div className={classes.summary}>\r\n                            {/* <h4 style={{ margin: 0, marginBottom: \"10px\", color: \"#3f51b5\", paddingTop: \"12px\" }}>Login</h4> */}\r\n\r\n\r\n                        </div>\r\n                        <div className={classes.container}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <div style={{ padding: \"10px 0 10px 0\" }}>\r\n                                        <CustomInput\r\n                                            name=\"username\"\r\n                                            label=\"User Name\"\r\n                                            placeholder=\"User Name\"\r\n\r\n                                            // helperText={formError.vehicle_no}\r\n                                            // isError={formError.vehicle_no.length > 0}\r\n                                            onChange={this.handleOnChange}\r\n                                            // onBlur={handleOnBlur}\r\n                                            required={true}\r\n                                            // inputProps={{ maxLength: 16 }}\r\n                                            value={this.state.formData.username}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <div style={{ padding: \"10px 0 10px 0\" }}>\r\n                                        <CustomInput\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            placeholder=\"Password\"\r\n                                            isPassword\r\n\r\n                                            // helperText={formError.vehicle_no}\r\n                                            // isError={formError.vehicle_no.length > 0}\r\n                                            onChange={this.handleOnChange}\r\n                                            // onBlur={handleOnBlur}\r\n                                            required={true}\r\n                                            // inputProps={{ maxLength: 15 }}\r\n                                            value={this.state.formData.password}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <div className={classes.footerBtnContainer}>\r\n                                <CustomButton disabled={this.state.loginButton} onClick={this.handleProceed}>\r\n                                    Login\r\n                                </CustomButton>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(loginStyle)(LoginPage)","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Register\\Register.jsx",["113","114","115","116"],"import { Grid, MenuItem, Paper, TextareaAutosize, Typography, withStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport react, { Fragment } from 'react';\r\nimport CustomButton from '../../CommonComponent/Button/CustomButton';\r\nimport CustomInput from '../../CommonComponent/Input/CustomInput';\r\nimport Loader from '../../CommonComponent/Loader/Loader';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CustomSelect from '../../CommonComponent/Select/CustomSelect';\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst paymentSecretKey = 'run4Fun';\r\nconst numRegx = new RegExp(\"^[0-9]+$\");\r\n\r\nconst registerStyle = theme => ({\r\n    root: {\r\n        width: \"60%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    rootPaper: {\r\n        padding: \"10px 40px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        margin: \"20px auto\",\r\n    },\r\n    summary: {\r\n        textAlign: \"left\",\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n        borderBottom: \"2px solid #3f51b5\",\r\n        paddingBottom: \"23px\",\r\n    },\r\n    heading: {\r\n        padding: \"10px\",\r\n        fontSize: \"24px\",\r\n        fontWeight: \"600\",\r\n        color: \"#3f51b5\",\r\n    },\r\n    selectPaper: {\r\n        border: \"1px solid #909090\",\r\n        marginTop: \"8px\",\r\n        boxShadow: \"none\",\r\n        maxHeight: \"205px !important\",\r\n    },\r\n    selectList: {\r\n        \"& li\": {\r\n            padding: \"10px\",\r\n            fontSize: \"17px\",\r\n        },\r\n        // \"&$selected \": {\r\n        //     background: \"#3f51b5\",\r\n        // },\r\n        // \"& hover\": {\r\n        //   background: theme.palette.primary.light,\r\n        // },\r\n    },\r\n    menuItemRoot: {\r\n        \"&$selected\": {\r\n            background: `#3f51b5b3 !important`,\r\n        },\r\n        \"&$selected:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n        \"&:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n    },\r\n    menuSelected: { background: \"#3f51b5b3 !important\" },\r\n    footerBtnContainer: {\r\n        margin: \"30px\",\r\n    },\r\n    itemName: {\r\n        fontWeight: 500,\r\n    },\r\n    itemValue: {\r\n        fontWeight: 700,\r\n    },\r\n})\r\n\r\nclass RegisterPage extends react.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formData: {\r\n                username: \"\",\r\n                password: \"\",\r\n            },\r\n            loader: false,\r\n            loginButton: true\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleOnChange = (event) => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        // if (name === \"cardNumber\" || name == \"cvv\" || name == \"expiryMonth\" || name == \"expiryYear\") {\r\n        //     if (!(!value.length || numRegx.test(value))) {\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        let values = this.state;\r\n        values.formData[name] = value;\r\n        this.setState({ ...values }, () => {\r\n            this.validatePay()\r\n        });\r\n    }\r\n\r\n    validatePay = () => {\r\n\r\n        let values = this.state.formData;\r\n        if (values.username !== \"\" && values.password !== \"\") {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loginButton: false\r\n            }))\r\n        } else {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loginButton: true\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    handleProceed = () => {\r\n\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            loader: true\r\n        }))\r\n\r\n        console.log(this.state)\r\n\r\n        let obj = {\r\n            \"userDetails\": {\r\n                \"username\": this.state.formData.username,\r\n                \"password\": this.state.formData.password,\r\n            },\r\n        }\r\n\r\n        let EncryptedObj = CryptoJS.AES.encrypt(JSON.stringify(obj), paymentSecretKey).toString();\r\n        console.log(EncryptedObj);\r\n\r\n        // var bytes = CryptoJS.AES.decrypt(EncryptedObj, paymentSecretKey);\r\n        // var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n        // console.log(decryptedData)\r\n\r\n        axios.post('http://localhost:8085/premiumservice/calculatePremium', EncryptedObj).then(res => {\r\n            console.log(res)\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loader: false,\r\n                paymentResponse: res,\r\n            }))\r\n        })\r\n            .catch(() => {\r\n                let path = `error`;\r\n                this.props.history.push(path)\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n                <Loader loader={this.state.loader} />\r\n                <Paper classes={{ root: classes.rootPaper }} elevation={10}>\r\n                    <Typography variant=\"h5\" gutterBottom classes={{ root: classes.heading }}>\r\n\r\n                        <HomeIcon onClick={() => {\r\n                            this.props.history.push('/homebot')\r\n                        }} style={{ cursor: \"pointer\", float: \"left\", width: \"1.3em\", height: '1.3em' }} />\r\n                        <span>Register</span>\r\n                    </Typography>\r\n\r\n                    <Fragment>\r\n                        <div className={classes.summary}>\r\n                            {/* <h4 style={{ margin: 0, marginBottom: \"10px\", color: \"#3f51b5\", paddingTop: \"12px\" }}>Login</h4> */}\r\n\r\n                        </div>\r\n                        <div className={classes.container}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <div style={{ padding: \"10px 0 10px 0\" }}>\r\n                                        <CustomInput\r\n                                            name=\"username\"\r\n                                            label=\"User Name\"\r\n                                            placeholder=\"User Name\"\r\n\r\n                                            // helperText={formError.vehicle_no}\r\n                                            // isError={formError.vehicle_no.length > 0}\r\n                                            onChange={this.handleOnChange}\r\n                                            // onBlur={handleOnBlur}\r\n                                            required={true}\r\n                                            // inputProps={{ maxLength: 16 }}\r\n                                            value={this.state.formData.username}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <div style={{ padding: \"10px 0 10px 0\" }}>\r\n                                        <CustomInput\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            placeholder=\"Password\"\r\n                                            isPassword\r\n                                            // helperText={formError.vehicle_no}\r\n                                            // isError={formError.vehicle_no.length > 0}\r\n                                            onChange={this.handleOnChange}\r\n                                            // onBlur={handleOnBlur}\r\n                                            required={true}\r\n                                            // inputProps={{ maxLength: 15 }}\r\n                                            value={this.state.formData.password}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <div className={classes.footerBtnContainer}>\r\n                                <CustomButton disabled={this.state.loginButton} onClick={this.handleProceed}>\r\n                                    Register\r\n                                </CustomButton>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(registerStyle)(RegisterPage)","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Home\\Home.jsx",["117","118","119","120","121","122","123","124","125","126"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CustomInput from '../../CommonComponent/Input/CustomInput.jsx';\r\nimport { Grid, MenuItem, Paper } from '@material-ui/core';\r\nimport CustomButton from '../../CommonComponent/Button/CustomButton.jsx';\r\nimport CustomSelect from '../../CommonComponent/Select/CustomSelect.jsx';\r\nimport { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from '../../CommonComponent/Loader/Loader.jsx';\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst paymentSecretKey = 'run4Fun';\r\nconst emailRegx = new RegExp(\r\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n);\r\n\r\n\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <PermIdentityIcon />,\r\n        2: <FavoriteIcon />,\r\n        3: <VideoLabelIcon />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        boxShadow: \"0px 6px 6px -3px rgba(0,0,0,0.2), 0px 10px 14px 1px rgba(0,0,0,0.14), 0px 4px 18px 3px rgba(0,0,0,0.12)\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    paperRoot: {\r\n        // borderRadius: \"15px\",\r\n        padding: \"10px 30px 20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    stepRoot: {\r\n        borderRadius: \"15px\",\r\n    },\r\n    heading: {\r\n        marginBottom: \"20px\",\r\n        marginTop: 0,\r\n        fontSize: \"24px\",\r\n        padding: \" 0 120px \",\r\n        color: \"#3f51b5\",\r\n        // color: theme.palette.primary.main,\r\n    },\r\n    selectPaper: {\r\n        border: \"1px solid #909090\",\r\n        marginTop: \"8px\",\r\n        boxShadow: \"none\",\r\n        maxHeight: \"205px !important\",\r\n    },\r\n    selectList: {\r\n        \"& li\": {\r\n            padding: \"10px\",\r\n            fontSize: \"17px\",\r\n        },\r\n        // \"&$selected \": {\r\n        //   background: theme.palette.primary.light,\r\n        // },\r\n        // \"& hover\": {\r\n        //   background: theme.palette.primary.light,\r\n        // },\r\n    },\r\n    footerCont: {\r\n        marginTop: \"30px\"\r\n    },\r\n    menuItemRoot: {\r\n        \"&$selected\": {\r\n            background: `#3f51b5b3 !important`,\r\n        },\r\n        \"&$selected:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n        \"&:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n    },\r\n    menuSelected: { background: \"#3f51b5b3 !important\" },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Personal Information', 'Your Health Condition', 'Your Habits'];\r\n}\r\n\r\nfunction getHealthConditions() {\r\n    return [\r\n        {\r\n            id: \"hyperTension\",\r\n            name: \"Hypertension\"\r\n        },\r\n        {\r\n            id: \"bloodSugar\",\r\n            name: \"Blood Sugar\"\r\n        },\r\n        {\r\n            id: \"overWeight\",\r\n            name: \"Overweight\"\r\n        },\r\n        {\r\n            id: \"bloodPressure\",\r\n            name: \"Blood Pressure\"\r\n        },\r\n    ];\r\n}\r\n\r\nfunction getHabits() {\r\n    return [\r\n        {\r\n            id: \"smoking\",\r\n            name: \"Smoking\"\r\n        },\r\n        {\r\n            id: \"alcohol\",\r\n            name: \"Alcohol\"\r\n        },\r\n        {\r\n            id: \"drugs\",\r\n            name: \"Drugs\"\r\n        },\r\n        {\r\n            id: \"dailyExercise\",\r\n            name: \"Daily Exercise\"\r\n        },\r\n    ];\r\n}\r\n\r\nconst genderData = [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Male\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Female\"\r\n    }\r\n]\r\n\r\nconst selectionData = [\r\n    {\r\n        \"id\": 1,\r\n        \"selection\": \"Yes\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"selection\": \"No\"\r\n    },\r\n]\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const steps = getSteps();\r\n    const healthConditions = getHealthConditions();\r\n    const habits = getHabits();\r\n    const history = useHistory();\r\n    const [loader, setLoader] = useState(false);\r\n    const [nextDisbled, setNextDisabled] = useState(true);\r\n\r\n    const formInitialValue = {\r\n        name: \"\",\r\n        email: \"\",\r\n        gender: \"\",\r\n        age: \"\",\r\n        hyperTension: \"\",\r\n        bloodSugar: \"\",\r\n        overWeight: \"\",\r\n        bloodPressure: \"\",\r\n        smoking: \"\",\r\n        alcohol: \"\",\r\n        drugs: \"\",\r\n        dailyExercise: \"\",\r\n    };\r\n\r\n    const [formData, setFormData] = useState(formInitialValue);\r\n    const numRegx = new RegExp(\"^[0-9]+$\");\r\n\r\n    useEffect(() => {\r\n\r\n        nextValidation();\r\n\r\n    }, [formData, activeStep])\r\n\r\n    const nextValidation = () => {\r\n        if (activeStep == 0 && formData.name.trim() !== \"\" && formData.gender !== \"\" && formData.age.trim() !== \"\" && emailRegx.test(formData.email)) {\r\n            setNextDisabled(false);\r\n        } else if (activeStep == 1 && formData.hyperTension !== \"\" && formData.bloodSugar !== \"\" && formData.overWeight !== \"\" && formData.bloodPressure !== \"\") {\r\n            setNextDisabled(false)\r\n        } else if (activeStep == 2 && formData.smoking !== \"\" && formData.alcohol !== \"\" && formData.drugs !== \"\" && formData.dailyExercise !== \"\") {\r\n            setNextDisabled(false);\r\n        } else {\r\n            setNextDisabled(true)\r\n        }\r\n    }\r\n\r\n    // const checkValidity = (name) => {\r\n\r\n    //     if (name == \"name\") {\r\n\r\n    //     }\r\n    // }\r\n\r\n    const handleOnChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"age\") {\r\n            if (!(!value.length || numRegx.test(value))) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        setFormData((values) => ({\r\n            ...values,\r\n            [name]: value,\r\n        }));\r\n\r\n    }\r\n\r\n    const handleNext = () => {\r\n        switch (activeStep) {\r\n            case 0:\r\n                if (formData.name.trim() !== \"\" && formData.gender !== \"\" && formData.age.trim() !== \"\" && emailRegx.test(formData.email)) {\r\n                    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (formData.hyperTension !== \"\" && formData.bloodSugar !== \"\" && formData.overWeight !== \"\" && formData.bloodPressure !== \"\") {\r\n                    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                }\r\n                break;\r\n            case 2:\r\n                if (formData.smoking !== \"\" && formData.alcohol !== \"\" && formData.drugs !== \"\" && formData.dailyExercise !== \"\") {\r\n                    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    const handleFinish = () => {\r\n\r\n        setLoader(true)\r\n\r\n        let EncryptedObj = CryptoJS.AES.encrypt(JSON.stringify(formData), paymentSecretKey).toString();\r\n        sessionStorage.setItem(\"data\", EncryptedObj);\r\n\r\n        axios.post('http://localhost:8085/premiumservice/calculatePremium', formData).then(res => {\r\n            console.log(res)\r\n            let EncryptedRes = CryptoJS.AES.encrypt(JSON.stringify(res), paymentSecretKey).toString();\r\n            sessionStorage.setItem(\"dataPrm\", EncryptedRes);\r\n            setLoader(false)\r\n            let path = `summary`;\r\n            history.push(path);\r\n        })\r\n            .catch(() => {\r\n                let path = `error`;\r\n                history.push(path);\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Loader loader={loader} />\r\n\r\n            <Stepper classes={{ root: classes.stepRoot }} alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <div>\r\n\r\n                <div>\r\n                    <Grid container>\r\n                        <Grid item xs={2}></Grid>\r\n                        <Grid item xs={8} >\r\n                            <Paper classes={{ root: classes.paperRoot }} elevation={0}>\r\n\r\n                                <h3 className={`${classes.heading} form-title`}>\r\n                                    {`Check your health insurance premium within a minute!`}\r\n                                </h3>\r\n\r\n                                {activeStep == 0 && (\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ padding: \"10px\" }}>\r\n\r\n                                                <CustomInput\r\n                                                    name=\"name\"\r\n                                                    label=\"Your Name\"\r\n                                                    placeholder=\"Name\"\r\n\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    // inputProps={{ maxLength: 15 }}\r\n                                                    value={formData.name}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ padding: \"10px\" }}>\r\n\r\n                                                <CustomInput\r\n                                                    name=\"email\"\r\n                                                    label=\"Your Email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    // inputProps={{ maxLength: 15 }}\r\n                                                    value={formData.email}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ padding: \"10px\" }}>\r\n                                                <CustomSelect\r\n                                                    options={genderData.map((item) => (\r\n                                                        <MenuItem\r\n                                                            classes={{ root: classes.menuItemRoot, selected: classes.menuSelected }}\r\n                                                            value={item.name}\r\n                                                        >\r\n                                                            {item.name}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                    name=\"gender\"\r\n                                                    label=\"Your Gender\"\r\n                                                    MenuProps={{\r\n                                                        classes: {\r\n                                                            paper: classes.selectPaper,\r\n                                                            list: classes.selectList,\r\n                                                        },\r\n                                                    }}\r\n                                                    value={formData.gender}\r\n                                                    onChange={handleOnChange}\r\n                                                    placeholder=\"Select Gender\"\r\n                                                // helperText={formError.gender}\r\n                                                // isError={formError.gender.length > 0}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ padding: \"10px\" }}>\r\n                                                <CustomInput\r\n                                                    name=\"age\"\r\n                                                    label=\"Your Age\"\r\n                                                    placeholder=\"Age\"\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    inputProps={{ maxLength: 2 }}\r\n                                                    value={formData.age}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                )}\r\n\r\n                                {activeStep == 1 && (\r\n                                    <Grid container>\r\n\r\n                                        {healthConditions.map((item) => {\r\n                                            return (\r\n                                                <Grid item xs={6}>\r\n                                                    <div style={{ padding: \"10px\" }}>\r\n                                                        <CustomSelect\r\n                                                            options={selectionData.map((item) => (\r\n                                                                <MenuItem\r\n                                                                    classes={{ root: classes.menuItemRoot, selected: classes.menuSelected }}\r\n                                                                    value={item.selection}\r\n                                                                >\r\n                                                                    {item.selection}\r\n                                                                </MenuItem>\r\n                                                            ))}\r\n                                                            name={item.id}\r\n                                                            label={item.name}\r\n                                                            MenuProps={{\r\n                                                                classes: {\r\n                                                                    paper: classes.selectPaper,\r\n                                                                    list: classes.selectList,\r\n                                                                },\r\n                                                            }}\r\n                                                            value={formData[item.id]}\r\n                                                            onChange={handleOnChange}\r\n                                                            placeholder={`Select ${item.name}`}\r\n                                                        // helperText={formError.gender}\r\n                                                        // isError={formError.gender.length > 0}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            )\r\n                                        })}\r\n\r\n                                    </Grid>\r\n                                )}\r\n\r\n                                {activeStep == 2 && (\r\n                                    <Grid container>\r\n\r\n                                        {habits.map((item) => {\r\n                                            return (\r\n                                                <Grid item xs={6}>\r\n                                                    <div style={{ padding: \"10px\" }}>\r\n                                                        <CustomSelect\r\n                                                            options={selectionData.map((item) => (\r\n                                                                <MenuItem\r\n                                                                    classes={{ root: classes.menuItemRoot, selected: classes.menuSelected }}\r\n                                                                    value={item.selection}\r\n                                                                >\r\n                                                                    {item.selection}\r\n                                                                </MenuItem>\r\n                                                            ))}\r\n                                                            name={item.id}\r\n                                                            label={item.name}\r\n                                                            MenuProps={{\r\n                                                                classes: {\r\n                                                                    paper: classes.selectPaper,\r\n                                                                    list: classes.selectList,\r\n                                                                },\r\n                                                            }}\r\n                                                            value={formData[item.id]}\r\n                                                            onChange={handleOnChange}\r\n                                                            placeholder={`Select ${item.name}`}\r\n                                                        // helperText={formError.gender}\r\n                                                        // isError={formError.gender.length > 0}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            )\r\n                                        })}\r\n\r\n                                    </Grid>\r\n                                )}\r\n\r\n                                <div className={classes.footerCont}>\r\n                                    {/* <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography> */}\r\n                                    <div>\r\n\r\n                                        <CustomButton disabled={activeStep === 0} onClick={handleBack}>\r\n                                            Back\r\n                                        </CustomButton>\r\n                                        <span style={{ margin: \"20px\" }} />\r\n                                        <CustomButton\r\n                                            disabled={nextDisbled}\r\n                                            onClick={activeStep === steps.length - 1 ? handleFinish : handleNext}\r\n                                        >\r\n                                            {activeStep === steps.length - 1 ? 'Calculate Premium' : 'Next'}\r\n                                        </CustomButton>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Paper>\r\n\r\n                            {/* <p className=\"small\">\r\n                                For Health insurance,&nbsp;\r\n                             <a\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    style={{ textDecoration: \"none\" }}\r\n\r\n                                >\r\n                                    Click Here.\r\n                             </a>\r\n                            </p> */}\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                    </Grid>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\Component\\Payment\\PaymentPage.jsx",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import { Grid, Icon, MenuItem, Paper, TextareaAutosize, Typography, withStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport react, { Fragment } from 'react';\r\nimport CustomButton from '../../CommonComponent/Button/CustomButton';\r\nimport CustomInput from '../../CommonComponent/Input/CustomInput';\r\nimport Loader from '../../CommonComponent/Loader/Loader';\r\nimport CustomSelect from '../../CommonComponent/Select/CustomSelect';\r\nimport success from '../../Assests/Images/success-icon.png';\r\nimport failure from '../../Assests/Images/failure-icon.png';\r\nimport { Image } from '@material-ui/icons';\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst CryptoJS1 = require(\"crypto-js\");\r\nconst paymentSecretKey = 'run4Fun'; \r\nconst numRegx = new RegExp(\"^[0-9]+$\");\r\nconst cardData = [\r\n    {\r\n        type: \"Credit Card\",\r\n        id: \"CREDIT_CARD\"\r\n    },\r\n    {\r\n        type: \"Debit Card\",\r\n        id: \"DEDIT_CARD\"\r\n    }\r\n]\r\n\r\nconst paymentStyle = theme => ({\r\n    root: {\r\n        width: \"85%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    rootPaper: {\r\n        padding: \"10px 40px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        margin: \"5px auto\",\r\n    },\r\n    summary: {\r\n        textAlign: \"left\",\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n        borderBottom: \"2px solid #3f51b5\",\r\n        paddingBottom: \"23px\",\r\n    },\r\n    heading: {\r\n        padding: \"5px\",\r\n        fontSize: \"24px\",\r\n        fontWeight: \"500\",\r\n        color: \"#3f51b5\",\r\n    },\r\n    selectPaper: {\r\n        border: \"1px solid #909090\",\r\n        marginTop: \"8px\",\r\n        boxShadow: \"none\",\r\n        maxHeight: \"205px !important\",\r\n    },\r\n    selectList: {\r\n        \"& li\": {\r\n            padding: \"10px\",\r\n            fontSize: \"17px\",\r\n        },\r\n        // \"&$selected \": {\r\n        //     background: \"#3f51b5\",\r\n        // },\r\n        // \"& hover\": {\r\n        //   background: theme.palette.primary.light,\r\n        // },\r\n    },\r\n    menuItemRoot: {\r\n        \"&$selected\": {\r\n            background: `#3f51b5b3 !important`,\r\n        },\r\n        \"&$selected:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n        \"&:hover\": {\r\n            background: `#3f51b554 !important`,\r\n        },\r\n    },\r\n    menuSelected: { background: \"#3f51b5b3 !important\" },\r\n    footerBtnContainer: {\r\n        margin: \"30px\",\r\n    },\r\n    itemName: {\r\n        fontWeight: 500,\r\n    },\r\n    itemValue: {\r\n        fontWeight: 700,\r\n    },\r\n})\r\n\r\nclass PaymentPage extends react.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (sessionStorage.getItem(\"data\") === null || sessionStorage.getItem(\"data\") === \"\") {\r\n            props.history.push(`start`);\r\n        }\r\n        if (sessionStorage.getItem(\"dataPrm\") === null || sessionStorage.getItem(\"dataPrm\") === \"\") {\r\n            props.history.push(`start`);\r\n        }\r\n        this.state = {\r\n            formPaymentData: {\r\n                paymentMethod: \"\",\r\n                cardNumber: \"\",\r\n                holderName: \"\",\r\n                cvv: \"\",\r\n                expiryMonth: \"\",\r\n                expiryYear: \"\",\r\n            },\r\n            loader: false,\r\n            isPaymentStatusPage: false,\r\n            paymentButton: true,\r\n            paymentResponse: \"\",\r\n            premiumResponseData: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"data\") !== null && sessionStorage.getItem(\"dataPrm\") !== null) {\r\n            let data = sessionStorage.getItem(\"data\");\r\n            let bytes = CryptoJS.AES.decrypt(data, paymentSecretKey);\r\n            let decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n            let premiumResponseData = sessionStorage.getItem(\"dataPrm\");\r\n            let resBytes = CryptoJS.AES.decrypt(premiumResponseData, paymentSecretKey);\r\n            let resDecryptedData = JSON.parse(resBytes.toString(CryptoJS.enc.Utf8));\r\n\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                formData: decryptedData,\r\n                premiumResponseData: resDecryptedData,\r\n            }))\r\n        }\r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"cardNumber\" || name == \"cvv\" || name == \"expiryMonth\" || name == \"expiryYear\") {\r\n            if (!(!value.length || numRegx.test(value))) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let values = this.state;\r\n        values.formPaymentData[name] = value;\r\n        this.setState({ ...values }, () => {\r\n            this.validatePay()\r\n        });\r\n    }\r\n\r\n    validatePay = () => {\r\n        let values = this.state.formPaymentData;\r\n        if (values.paymentMethod !== \"\" && values.cardNumber.length == 16\r\n            && values.holderName !== \"\" && values.cvv.length == 3 && values.cvv != 0\r\n            && values.expiryMonth.length == 2 && values.cardNumber != 0\r\n            && values.expiryYear.length == 4 && values.expiryMonth <= 12 && values.expiryMonth != 0\r\n            && values.expiryYear >= new Date().getFullYear()) {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                paymentButton: false\r\n            }))\r\n        } else {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                paymentButton: true\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    handleProceed = () => {\r\n\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            loader: true\r\n        }))\r\n\r\n        console.log(this.state)\r\n        \r\n\r\n        let obj = {\r\n            \"client\": {\r\n                \"id\": Math.ceil(Math.random() * 1000000000).toString()\r\n            },\r\n            \"buyer\": {\r\n                \"name\": this.state.formData.name,\r\n                \"email\": this.state.formData.email,\r\n                \"cpf\": Math.ceil(Math.random() * 100000000000).toString()\r\n            },\r\n            \"amount\": this.state.premiumResponseData.data.amount,\r\n            \"type\": this.state.formPaymentData.paymentMethod,\r\n            \"creditCard\": {\r\n                \"holderName\": this.state.formPaymentData.holderName,\r\n                \"number\": this.state.formPaymentData.cardNumber,\r\n                \"expirationDate\": this.state.formPaymentData.expiryYear + '-' + this.state.formPaymentData.expiryMonth,\r\n                \"cvv\": this.state.formPaymentData.cvv\r\n            }\r\n        }\r\n\r\n        // var data = JSON.stringify(obj);\r\n        // var key = CryptoJS.enc.Latin1.parse('1234567812345678');\r\n        // var iv = CryptoJS.enc.Latin1.parse('1234567812345678');\r\n        // var encrypted = CryptoJS.AES.encrypt(\r\n        //     data,\r\n        //     key,\r\n        //     {\r\n        //         iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.ZeroPadding\r\n        //     });\r\n        // console.log('encrypted: ' + encrypted);\r\n\r\n        // var decrypted = CryptoJS.AES.decrypt(encrypted, key, { iv: iv, padding: CryptoJS.pad.ZeroPadding });\r\n        // console.log('decrypted: ' + decrypted.toString(CryptoJS.enc.Utf8));\r\n\r\n        // let EncryptedObj = CryptoJS.AES.encrypt(JSON.stringify(obj), paymentSecretKey).toString();\r\n        let EncryptedObj = JSON.stringify(obj);\r\n        console.log(EncryptedObj, \"EncryptedObj\");\r\n\r\n        // var bytes = CryptoJS.AES.decrypt(EncryptedObj, paymentSecretKey);\r\n        // var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n        // console.log(decryptedData)\r\n\r\n        axios.post('http://localhost:8085/paymentservice/payment', EncryptedObj,{headers: {\"Content-Type\":\"application/json\"}}).then(res => {\r\n            console.log(res)\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loader: false,\r\n                isPaymentStatusPage: true,\r\n                paymentResponse: res.data,\r\n            }))\r\n        })\r\n            .catch(() => {\r\n                let path = `error`;\r\n                this.props.history.push(path)\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n             \r\n\r\n                <Loader loader={this.state.loader} />\r\n                {this.state.premiumResponseData != \"\" ?\r\n                    <Paper classes={{ root: classes.rootPaper }} elevation={10}>\r\n                        <Typography variant=\"h5\" gutterBottom classes={{ root: classes.heading }}>\r\n                            {this.state.isPaymentStatusPage ? \"Payment Status\" : \"Payment Page\"}\r\n                        </Typography>\r\n                        {this.state.isPaymentStatusPage ?\r\n                            <Fragment>\r\n                                {this.state.paymentResponse.status == \"APPROVED\" ?\r\n                                    <div>\r\n                                        <div >\r\n                                            <img src={success} style={{ width: \"25px\", height: \"auto\" }} />\r\n                                        </div>\r\n                                        Your transaction is Successful\r\n                                        <div className={classes.summary}>\r\n                                            {/* <h4 style={{ margin: 0, marginBottom: \"10px\", color: \"#3f51b5\", paddingTop: \"12px\" }}>Personal Info</h4> */}\r\n                                            <div className={classes.item}>\r\n                                                <span className={classes.itemName}>Reference Number : </span>\r\n                                                <span className={classes.itemValue}>{this.state.paymentResponse.referenceNumber}</span>\r\n                                            </div>\r\n                                            <div className={classes.item}>\r\n                                                <span className={classes.itemName}>Person Name :</span>\r\n                                                <span className={classes.itemValue}> {this.state.paymentResponse.buyer.name}</span>\r\n                                            </div>\r\n                                            <div className={classes.item}>\r\n                                                <span className={classes.itemName}>Amount Paid : </span>\r\n                                                <span className={classes.itemValue}>Rs. {this.state.paymentResponse.amount}</span>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        <div >\r\n                                            <img src={failure} style={{ width: \"25px\", height: \"auto\" }} />\r\n                                        </div>\r\n                                        Your transaction is failed\r\n                                    </div>\r\n\r\n                                }\r\n\r\n                            </Fragment>\r\n                            :\r\n                            <Fragment>\r\n                                <div className={classes.summary}>\r\n                                    <h4 style={{ margin: 0, marginBottom: \"10px\", color: \"#3f51b5\", paddingTop: \"12px\" }}>Personal Info</h4>\r\n                                    <div className={classes.item}>\r\n                                        <span className={classes.itemName}>Insured Person : </span>\r\n                                        <span className={classes.itemValue}>{this.state.formData.name}</span>\r\n                                    </div>\r\n                                    <div className={classes.item}>\r\n                                        <span className={classes.itemName}>E-mail : </span>\r\n                                        <span className={classes.itemValue}>{this.state.formData.email}</span>\r\n                                    </div>\r\n                                    <div className={classes.item}>\r\n                                        <span className={classes.itemName}>Amount Payable : </span>\r\n                                        <span className={classes.itemValue}>Rs. {this.state.premiumResponseData.data.amount}</span>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className={classes.container}>\r\n                                    <div style={{ padding: \"15px 0\", maxWidth: \"400px\" }}>\r\n                                        <CustomSelect\r\n                                            options={cardData.map((item) => (\r\n                                                <MenuItem\r\n                                                    classes={{ root: classes.menuItemRoot, selected: classes.menuSelected }}\r\n                                                    value={item.id}\r\n                                                >\r\n                                                    {item.type}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                            name=\"paymentMethod\"\r\n                                            label=\"Payment Method\"\r\n                                            MenuProps={{\r\n                                                classes: {\r\n                                                    paper: classes.selectPaper,\r\n                                                    list: classes.selectList,\r\n                                                },\r\n                                            }}\r\n                                            value={this.state.formPaymentData.paymentMethod}\r\n                                            onChange={this.handleOnChange}\r\n                                            placeholder=\"Select Payment Method\"\r\n                                        // helperText={formError.gender}\r\n                                        // isError={formError.gender.length > 0}\r\n                                        />\r\n                                    </div>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ padding: \"10px 10px 10px 0\" }}>\r\n                                                <CustomInput\r\n                                                    name=\"cardNumber\"\r\n                                                    label=\"Card Number\"\r\n                                                    placeholder=\"Card Number\"\r\n\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={this.handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    inputProps={{ maxLength: 16 }}\r\n                                                    value={this.state.formPaymentData.cardNumber}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ padding: \"10px 0px 10px 15px\" }}>\r\n                                                <CustomInput\r\n                                                    name=\"holderName\"\r\n                                                    label=\"Holder Name\"\r\n                                                    placeholder=\"Holder Name\"\r\n\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={this.handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    // inputProps={{ maxLength: 15 }}\r\n                                                    value={this.state.formPaymentData.holderName}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ padding: \"10px 10px 10px 0\" }}>\r\n                                                <CustomInput\r\n                                                    name=\"cvv\"\r\n                                                    label=\"CVV Code\"\r\n                                                    placeholder=\"CVV code\"\r\n\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={this.handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    inputProps={{ maxLength: 3 }}\r\n                                                    value={this.state.formPaymentData.cvv}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n\r\n                                            <div style={{ padding: \"10px 0px 10px 15px\" }}>\r\n                                                <CustomInput\r\n                                                    name=\"expiryMonth\"\r\n                                                    label=\"Expiry Month\"\r\n                                                    placeholder=\"Expiry Month\"\r\n\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={this.handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    inputProps={{ maxLength: 2 }}\r\n                                                    value={this.state.formPaymentData.expiryMonth}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                            <div style={{ padding: \"10px 0px 10px 15px\" }}>\r\n                                                <CustomInput\r\n                                                    name=\"expiryYear\"\r\n                                                    label=\"Expiry Year\"\r\n                                                    placeholder=\"Expiry Year\"\r\n\r\n                                                    // helperText={formError.vehicle_no}\r\n                                                    // isError={formError.vehicle_no.length > 0}\r\n                                                    onChange={this.handleOnChange}\r\n                                                    // onBlur={handleOnBlur}\r\n                                                    required={true}\r\n                                                    inputProps={{ maxLength: 4 }}\r\n                                                    value={this.state.formPaymentData.expiryYear}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <div className={classes.footerBtnContainer}>\r\n                                        <CustomButton disabled={this.state.paymentButton} onClick={this.handleProceed}>\r\n                                            Proceed to Pay\r\n                                    </CustomButton>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        }\r\n                    </Paper>\r\n                    : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(paymentStyle)(PaymentPage)","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Button\\CustomButton.jsx",[],"C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Loader\\Loader.jsx",["145"],"import React from \"react\";\r\nimport loaderImg from \"../../Assests/Images/loader.svg\";\r\n\r\nexport default function Loader(props) {\r\n  const { loader } = props;\r\n  // const classes = useStyles();\r\n  return (\r\n    loader ? <div className='loader'>\r\n      <img src={loaderImg} />\r\n    </div> : ''\r\n  );\r\n  // return loader ? <div className=\"loading\" /> : \"\";\r\n}\r\n","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Input\\CustomInput.jsx",["146","147"],"import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    minWidth: 120,\r\n  },\r\n  inputRoot: {\r\n    \"&::placeholder\": { textTransform: \"none !important\" },\r\n    \"&::-ms-input-placeholder\": { textTransform: \"none !important\" },\r\n    fontWeight: 700,\r\n    color: \"#313131\",\r\n    padding: \"5px 0\",\r\n    fontSize: \"16px\",\r\n    textTransform: \"uppercase\",\r\n    lineHeight: 1.5,\r\n  },\r\n  inputRootEdit: {\r\n    \"&::placeholder\": { textTransform: \"none !important\" },\r\n    \"&::-ms-input-placeholder\": { textTransform: \"none !important\" },\r\n    fontWeight: 700,\r\n    color: \"#313131\",\r\n    padding: \"5px 0\",\r\n    fontSize: \"17px\",\r\n    textTransform: \"uppercase\",\r\n    lineHeight: 1.5,\r\n  },\r\n  label: {\r\n    color: \"#909090\",\r\n    fontSize: \"18px\",\r\n    marginBottom: \".1em\",\r\n    width: \"max-content\",\r\n  },\r\n}));\r\n\r\nconst onPrevent = (e) => {\r\n  e.preventDefault();\r\n}\r\n\r\nexport default function CustomInput(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    name,\r\n    label,\r\n    placeholder,\r\n    value,\r\n    helperText,\r\n    isError,\r\n    onClick,\r\n    onChange = () => { },\r\n    onBlur = () => { },\r\n    required,\r\n    inputProps,\r\n    InputProps,\r\n    auto,\r\n    defaultValue,\r\n    onKeyDown,\r\n    autoComplete,\r\n    isVehicleEdit,\r\n    id,\r\n    style,\r\n    isAddressField,\r\n    isPassword\r\n  } = props;\r\n  return (\r\n    <FormControl style={{ width: \"100%\" }} className={classes.formControl}>\r\n      <InputLabel shrink id=\"customInput\" classes={{ root: classes.label }}>\r\n        {label}\r\n      </InputLabel>\r\n      <TextField\r\n        onPaste={e => onPrevent(e)}\r\n        onCopy={e => onPrevent(e)}\r\n        onKeyDown={onKeyDown}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n        value={value}\r\n        onClick={onClick}\r\n        onChange={onChange}\r\n        style={{ width: \"100%\", marginTop: \"15px\", ...style }}\r\n        labelId=\"customInput\"\r\n        id={id ? id : \"customInput\"}\r\n        InputProps={{\r\n          ...{\r\n            classes: {\r\n              root: isVehicleEdit ? classes.inputRootEdit : classes.inputRoot,\r\n              input: isVehicleEdit ? classes.inputRootEdit : classes.inputRoot\r\n            },\r\n          },\r\n          ...InputProps,\r\n        }}\r\n        placeholder={placeholder}\r\n        helperText={helperText}\r\n        onChange={(e) => onChange(e)}\r\n        onBlur={(e) => onBlur(e)}\r\n        required={required}\r\n        inputProps={inputProps}\r\n        error={isError}\r\n        autoFocus={auto}\r\n        // autoComplete=\"false\" \r\n        autoComplete={isAddressField ? \"chrome-off\" : \"off\"}\r\n        type={isPassword ? \"password\" : \"\"}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\Users\\sriji.n\\Desktop\\Aspiring Minds\\ROUND2\\ROUND-2\\PROBLEM 5\\CLIENT_SIDE\\src\\CommonComponent\\Select\\CustomSelect.jsx",["148","149"],"import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { FormHelperText } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    minWidth: 100,\r\n  },\r\n  label: {\r\n    color: \"#909090\",\r\n    fontSize: \"18px\",\r\n    marginBottom: \".1em\",\r\n  },\r\n  select: {\r\n    \"&:focus\": {\r\n      background: \"none\",\r\n    },\r\n    fontWeight: 600,\r\n  },\r\n  selectCoverage: {\r\n    fontSize: \"17.5px\",\r\n    fontWeight: 700,\r\n    \"&:focus\": {\r\n      background: \"none\",\r\n    },\r\n  },\r\n  inputRoot: {\r\n    marginTop: \"9px\",\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\nexport default function CustomSelect(props) {\r\n  const {\r\n    name,\r\n    label,\r\n    value,\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    disabled,\r\n    disableUnderline,\r\n    isError,\r\n    helperText,\r\n    staicYear,\r\n    defaultValue,\r\n    classes: propsClasses,\r\n    greyPlaceholder,\r\n    MenuProps,\r\n    isCoverage,\r\n    margin,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl\r\n      // className={classes.formControl}\r\n      margin={margin}\r\n      style={{\r\n        width: \"100%\",\r\n        margin: margin === \"dense\" ? 0 : \"8px\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        minWidth: 100,\r\n      }}\r\n    >\r\n      {label && (\r\n        <InputLabel shrink classes={{ root: classes.label }}>\r\n          {label}\r\n        </InputLabel>\r\n      )}\r\n      <Select\r\n        inputProps={{\r\n          classes: {\r\n            select: classes.select,\r\n            root: classes.inputRoot\r\n          },\r\n        }}\r\n        classes={propsClasses}\r\n        name={name}\r\n        disableUnderline={disableUnderline}\r\n        disabled={disabled}\r\n        className={classes.selectEmpty}\r\n        value={value}\r\n        onChange={onChange}\r\n        error={isError}\r\n        displayEmpty\r\n        IconComponent={(props) => <ExpandMoreIcon fontSize=\"small\" className={props.className} />}\r\n        MenuProps={{\r\n          ...{\r\n            PaperProps: {\r\n              style: {\r\n                maxHeight: 40 * 4.5,\r\n                width: \"20ch\",\r\n              },\r\n            },\r\n            disableScrollLock: true,\r\n            anchorOrigin: {\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            },\r\n            transformOrigin: {\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            },\r\n            getContentAnchorEl: null,\r\n          },\r\n          ...MenuProps,\r\n        }}\r\n        renderValue={\r\n          value !== \"\"\r\n            ? undefined\r\n            : () => <Placeholder greyPlaceholder={greyPlaceholder}>{placeholder}</Placeholder>\r\n        }\r\n        labelId=\"Vehicle Reg No\"\r\n        id=\"Vehicle Reg No\"\r\n      >\r\n        {staicYear ? <MenuItem value={12}>1 YEAR</MenuItem> : null}\r\n        {options}\r\n      </Select>\r\n      <FormHelperText error={isError}>{helperText}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nconst usePlaceholderStyles = makeStyles(() => ({\r\n  placeholder: {\r\n    color: \"#313131\",\r\n    fontWeight: \"700\",\r\n  },\r\n}));\r\nconst Placeholder = ({ children, greyPlaceholder }) => {\r\n  const classes = usePlaceholderStyles();\r\n  return (\r\n    <div className={classes.placeholder} style={{ color: greyPlaceholder ? \"#A1A5A6\" : \"#313131\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n",["150","151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":8,"nodeType":"158","messageId":"159","endLine":1,"endColumn":12},{"ruleId":"156","severity":1,"message":"160","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"161","line":3,"column":27,"nodeType":"158","messageId":"159","endLine":3,"endColumn":33},{"ruleId":"162","severity":1,"message":"163","line":57,"column":3,"nodeType":"158","endLine":57,"endColumn":12,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":68,"column":13,"nodeType":"167","endLine":73,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":76,"column":13,"nodeType":"167","endLine":81,"endColumn":14},{"ruleId":"156","severity":1,"message":"160","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"168","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":37},{"ruleId":"156","severity":1,"message":"169","line":121,"column":11,"nodeType":"158","messageId":"159","endLine":121,"endColumn":34},{"ruleId":"156","severity":1,"message":"170","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":76,"column":5,"nodeType":"173","messageId":"174","endLine":78,"endColumn":6},{"ruleId":"156","severity":1,"message":"175","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":24},{"ruleId":"156","severity":1,"message":"176","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"175","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":24},{"ruleId":"156","severity":1,"message":"177","line":1,"column":33,"nodeType":"158","messageId":"159","endLine":1,"endColumn":49},{"ruleId":"156","severity":1,"message":"178","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":20},{"ruleId":"156","severity":1,"message":"179","line":12,"column":7,"nodeType":"158","messageId":"159","endLine":12,"endColumn":14},{"ruleId":"156","severity":1,"message":"175","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":24},{"ruleId":"156","severity":1,"message":"177","line":1,"column":33,"nodeType":"158","messageId":"159","endLine":1,"endColumn":49},{"ruleId":"156","severity":1,"message":"178","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":20},{"ruleId":"156","severity":1,"message":"179","line":12,"column":7,"nodeType":"158","messageId":"159","endLine":12,"endColumn":14},{"ruleId":"156","severity":1,"message":"180","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":13},{"ruleId":"156","severity":1,"message":"181","line":13,"column":8,"nodeType":"158","messageId":"159","endLine":13,"endColumn":14},{"ruleId":"156","severity":1,"message":"182","line":14,"column":8,"nodeType":"158","messageId":"159","endLine":14,"endColumn":18},{"ruleId":"162","severity":1,"message":"183","line":279,"column":8,"nodeType":"184","endLine":279,"endColumn":30,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":282,"column":24,"nodeType":"188","messageId":"189","endLine":282,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":284,"column":31,"nodeType":"188","messageId":"189","endLine":284,"endColumn":33},{"ruleId":"186","severity":1,"message":"187","line":286,"column":31,"nodeType":"188","messageId":"189","endLine":286,"endColumn":33},{"ruleId":"186","severity":1,"message":"187","line":393,"column":45,"nodeType":"188","messageId":"189","endLine":393,"endColumn":47},{"ruleId":"186","severity":1,"message":"187","line":476,"column":45,"nodeType":"188","messageId":"189","endLine":476,"endColumn":47},{"ruleId":"186","severity":1,"message":"187","line":514,"column":45,"nodeType":"188","messageId":"189","endLine":514,"endColumn":47},{"ruleId":"156","severity":1,"message":"190","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":20},{"ruleId":"156","severity":1,"message":"177","line":1,"column":39,"nodeType":"158","messageId":"159","endLine":1,"endColumn":55},{"ruleId":"156","severity":1,"message":"191","line":10,"column":10,"nodeType":"158","messageId":"159","endLine":10,"endColumn":15},{"ruleId":"156","severity":1,"message":"192","line":13,"column":7,"nodeType":"158","messageId":"159","endLine":13,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":145,"column":43,"nodeType":"188","messageId":"189","endLine":145,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":145,"column":60,"nodeType":"188","messageId":"189","endLine":145,"endColumn":62},{"ruleId":"186","severity":1,"message":"187","line":145,"column":85,"nodeType":"188","messageId":"189","endLine":145,"endColumn":87},{"ruleId":"186","severity":1,"message":"187","line":160,"column":69,"nodeType":"188","messageId":"189","endLine":160,"endColumn":71},{"ruleId":"186","severity":1,"message":"187","line":161,"column":62,"nodeType":"188","messageId":"189","endLine":161,"endColumn":64},{"ruleId":"186","severity":1,"message":"193","line":161,"column":81,"nodeType":"188","messageId":"189","endLine":161,"endColumn":83},{"ruleId":"186","severity":1,"message":"187","line":162,"column":42,"nodeType":"188","messageId":"189","endLine":162,"endColumn":44},{"ruleId":"186","severity":1,"message":"193","line":162,"column":68,"nodeType":"188","messageId":"189","endLine":162,"endColumn":70},{"ruleId":"186","severity":1,"message":"187","line":163,"column":41,"nodeType":"188","messageId":"189","endLine":163,"endColumn":43},{"ruleId":"186","severity":1,"message":"193","line":163,"column":96,"nodeType":"188","messageId":"189","endLine":163,"endColumn":98},{"ruleId":"186","severity":1,"message":"193","line":252,"column":49,"nodeType":"188","messageId":"189","endLine":252,"endColumn":51},{"ruleId":"186","severity":1,"message":"187","line":259,"column":68,"nodeType":"188","messageId":"189","endLine":259,"endColumn":70},{"ruleId":"194","severity":1,"message":"195","line":262,"column":45,"nodeType":"167","endLine":262,"endColumn":108},{"ruleId":"194","severity":1,"message":"195","line":286,"column":45,"nodeType":"167","endLine":286,"endColumn":108},{"ruleId":"194","severity":1,"message":"195","line":9,"column":7,"nodeType":"167","endLine":9,"endColumn":30},{"ruleId":"156","severity":1,"message":"196","line":64,"column":5,"nodeType":"158","messageId":"159","endLine":64,"endColumn":17},{"ruleId":"197","severity":1,"message":"198","line":99,"column":9,"nodeType":"199","endLine":99,"endColumn":38},{"ruleId":"156","severity":1,"message":"200","line":52,"column":5,"nodeType":"158","messageId":"159","endLine":52,"endColumn":17},{"ruleId":"156","severity":1,"message":"201","line":56,"column":5,"nodeType":"158","messageId":"159","endLine":56,"endColumn":15},{"ruleId":"152","replacedBy":"202"},{"ruleId":"154","replacedBy":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCurrentyear'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["206"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'handleNeedAssitanceOpen' is assigned a value but never used.","'CustomButton' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MenuItem' is defined but never used.","'axios' is defined but never used.","'TextareaAutosize' is defined but never used.","'CustomSelect' is defined but never used.","'numRegx' is assigned a value but never used.","'Check' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'nextValidation'. Either include it or remove the dependency array.","ArrayExpression",["207"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Icon' is defined but never used.","'Image' is defined but never used.","'CryptoJS1' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'autoComplete' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'defaultValue' is assigned a value but never used.","'isCoverage' is assigned a value but never used.",["204"],["205"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Add dependencies array: []",{"range":"212","text":"213"},"Update the dependencies array to be: [formData, activeStep, nextValidation]",{"range":"214","text":"215"},[1546,1546],", []",[7501,7523],"[formData, activeStep, nextValidation]"]